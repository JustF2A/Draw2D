<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<UserControl x:Class="Draw2D.Views.MainView"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Draw2D.Views"
             xmlns:editor="clr-namespace:Draw2D.Editor"
             xmlns:paz="clr-namespace:Avalonia.Controls.PanAndZoom;assembly=Avalonia.Controls.PanAndZoom"
             UseLayoutRounding="True" RenderOptions.BitmapInterpolationMode="HighQuality" Focusable="True"
             mc:Ignorable="d"
             d:DesignWidth="800" d:DesignHeight="600">
    <UserControl.Resources>
        <local:IsToolConverter x:Key="IsToolConverter"/>
    </UserControl.Resources>
    <UserControl.KeyBindings>
        <!-- File -->
        <KeyBinding Command="{Binding New}" Gesture="Ctrl+N"/>
        <KeyBinding Command="{Binding Open}" Gesture="Ctrl+O"/>
        <KeyBinding Command="{Binding SaveAs}" Gesture="Ctrl+S"/>
        <KeyBinding Command="{Binding Exit}" Gesture="Alt+F4"/>
        <!-- Edit -->
        <KeyBinding Command="{Binding Selection.Cut}" CommandParameter="{Binding}" Gesture="Ctrl+X"/>
        <KeyBinding Command="{Binding Selection.Copy}" CommandParameter="{Binding}" Gesture="Ctrl+C"/>
        <KeyBinding Command="{Binding Selection.Paste}" CommandParameter="{Binding}" Gesture="Ctrl+V"/>
        <KeyBinding Command="{Binding Selection.Delete}" CommandParameter="{Binding}" Gesture="Delete"/>
        <KeyBinding Command="{Binding Selection.Group}" CommandParameter="{Binding}" Gesture="Ctrl+G"/>
        <KeyBinding Command="{Binding Selection.SelectAll}" CommandParameter="{Binding}" Gesture="Ctrl+A"/>
        <!-- Tool -->
        <KeyBinding Command="{Binding SetTool}" CommandParameter="None" Gesture="N"/>
        <KeyBinding Command="{Binding SetTool}" CommandParameter="Selection" Gesture="S"/>
        <KeyBinding Command="{Binding SetTool}" CommandParameter="Line" Gesture="L"/>
        <KeyBinding Command="{Binding SetTool}" CommandParameter="Point" Gesture="P"/>
        <KeyBinding Command="{Binding SetTool}" CommandParameter="CubicBezier" Gesture="B"/>
        <KeyBinding Command="{Binding SetTool}" CommandParameter="QuadraticBezier" Gesture="Q"/>
        <KeyBinding Command="{Binding SetTool}" CommandParameter="Path" Gesture="H"/>
        <KeyBinding Command="{Binding SetTool}" CommandParameter="Move" Gesture="M"/>
        <KeyBinding Command="{Binding SetTool}" CommandParameter="Rectangle" Gesture="R"/>
        <KeyBinding Command="{Binding SetTool}" CommandParameter="Ellipse" Gesture="E"/>
        <KeyBinding Command="{Binding SetTool}" CommandParameter="Text" Gesture="T"/>
        <!-- View -->
        <KeyBinding Command="{Binding Zoom.Reset}" Gesture="Z"/>
        <KeyBinding Command="{Binding Zoom.AutoFit}" Gesture="X"/>
    </UserControl.KeyBindings>
    <Grid RowDefinitions="Auto,5,*,5" ColumnDefinitions="300,Auto,*">
        <Menu Background="Transparent" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
            <MenuItem Header="_File">
                <MenuItem Header="New" Command="{Binding New}"/>
                <Separator/>
                <MenuItem Header="_Open..." Command="{Binding Open}"/>
                <Separator/>
                <MenuItem Header="Save _As..." Command="{Binding SaveAs}"/>
                <Separator/>
                <MenuItem Header="E_xit" Command="{Binding Exit}"/>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="Cu_t" Command="{Binding Selection.Cut}" CommandParameter="{Binding}"/>
                <MenuItem Header="_Copy" Command="{Binding Selection.Copy}" CommandParameter="{Binding}"/>
                <MenuItem Header="_Paste" Command="{Binding Selection.Paste}" CommandParameter="{Binding}"/>
                <MenuItem Header="_Delete" Command="{Binding Selection.Delete}" CommandParameter="{Binding}"/>
                <Separator/>
                <MenuItem Header="_Group" Command="{Binding Selection.Group}" CommandParameter="{Binding}"/>
                <Separator/>
                <MenuItem Header="Select _All" Command="{Binding Selection.SelectAll}" CommandParameter="{Binding}"/>
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem Header="_Reset Zoom" Command="{Binding #inputView.ResetZoom}" CommandParameter="True"/>
                <Separator/>
                <MenuItem Header="_Center Zoom" Command="{Binding #inputView.CenterZoom}" CommandParameter="True"/>
                <Separator/>
                <MenuItem Header="_Fill Zoom" Command="{Binding #inputView.FillZoom}" CommandParameter="True"/>
                <Separator/>
                <MenuItem Header="_Uniform Zoom" Command="{Binding #inputView.UniformZoom}" CommandParameter="True"/>
                <Separator/>
                <MenuItem Header="Uniform_ToFill Zoom" Command="{Binding #inputView.UniformToFillZoom}" CommandParameter="True"/>
            </MenuItem>
            <MenuItem Header="_Tool">
                <MenuItem Header="_None" Command="{Binding SetTool}" CommandParameter="None">
                    <MenuItem.Icon>
                        <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=None, Mode=OneWay}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="_Selection" Command="{Binding SetTool}" CommandParameter="Selection">
                    <MenuItem.Icon>
                        <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=Selection, Mode=OneWay}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="_Guide" Command="{Binding SetTool}" CommandParameter="Guide">
                    <MenuItem.Icon>
                        <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=Guide, Mode=OneWay}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="_Point" Command="{Binding SetTool}" CommandParameter="Point">
                    <MenuItem.Icon>
                        <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=Point, Mode=OneWay}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="_Line" Command="{Binding SetTool}" CommandParameter="Line">
                    <MenuItem.Icon>
                        <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=Line, Mode=OneWay}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Pol_y Line" Command="{Binding SetTool}" CommandParameter="PolyLine">
                    <MenuItem.Icon>
                        <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=PolyLine, Mode=OneWay}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Cubic Bezier" Command="{Binding SetTool}" CommandParameter="CubicBezier">
                    <MenuItem.Icon>
                        <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=CubicBezier, Mode=OneWay}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Quadratic Bezier" Command="{Binding SetTool}" CommandParameter="QuadraticBezier">
                    <MenuItem.Icon>
                        <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=QuadraticBezier, Mode=OneWay}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Pat_h" Command="{Binding SetTool}" CommandParameter="Path">
                    <MenuItem.Icon>
                        <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=Path, Mode=OneWay}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Path T_ools" IsEnabled="{Binding CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=Path, Mode=OneWay}">
                    <MenuItem Header="_Line" Command="{Binding SetTool}" CommandParameter="PolyLine">
                        <MenuItem.Icon>
                            <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding CurrentTool.Settings.CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=PolyLine, Mode=OneWay}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="_Cubic Bezier" Command="{Binding SetTool}" CommandParameter="CubicBezier">
                        <MenuItem.Icon>
                            <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding CurrentTool.Settings.CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=CubicBezier, Mode=OneWay}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="_Quadratic Bezier" Command="{Binding SetTool}" CommandParameter="QuadraticBezier">
                        <MenuItem.Icon>
                            <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding CurrentTool.Settings.CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=QuadraticBezier, Mode=OneWay}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="_Move" Command="{Binding SetTool}" CommandParameter="Move">
                        <MenuItem.Icon>
                            <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding CurrentTool.Settings.CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=Move, Mode=OneWay}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Scr_ibble" Command="{Binding SetTool}" CommandParameter="Scribble">
                    <MenuItem.Icon>
                        <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=Scribble, Mode=OneWay}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="_Rectangle" Command="{Binding SetTool}" CommandParameter="Rectangle">
                    <MenuItem.Icon>
                        <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=Rectangle, Mode=OneWay}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Ellipse" Command="{Binding SetTool}" CommandParameter="Ellipse">
                    <MenuItem.Icon>
                        <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=Ellipse, Mode=OneWay}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="_Text" Command="{Binding SetTool}" CommandParameter="Text">
                    <MenuItem.Icon>
                        <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding CurrentTool, Converter={StaticResource IsToolConverter}, ConverterParameter=Text, Mode=OneWay}"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Debug">
                <MenuItem Header="DrawDirtyRects" Click="DebugDrawDirtyRects_Click">
                    <MenuItem.Icon>
                        <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding $parent[local:MainView].DrawDirtyRects}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="DrawFps" Click="DebugDrawFps_Click">
                    <MenuItem.Icon>
                        <CheckBox BorderThickness="0" IsHitTestVisible="False" IsChecked="{Binding $parent[local:MainView].DrawFps}"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
        <Grid RowDefinitions="55*,Auto,45*" Grid.Row="2" Grid.Column="0">
            <TabControl Classes="default" Grid.Row="0" TabStripPlacement="Top">
                <TabItem Classes="default" Header="Tool">
                    <Border Classes="default">
                        <ContentControl Content="{Binding CurrentTool.Settings}"/>
                    </Border>
                </TabItem>
                <TabItem Classes="default" Header="Style">
                    <Border Classes="default">
                        <ContentControl Content="{Binding CurrentStyle}"/>
                    </Border>
                </TabItem>
                <TabItem Classes="default" Header="Hovered">
                    <Border Classes="default">
                        <ContentControl Content="{Binding Selection.Hovered}"/>
                    </Border>
                </TabItem>
                <TabItem Classes="default" Header="Renderer">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="*,150">
                        <TextBlock Classes="default" Grid.Column="0" Grid.Row="0" Text="ZoomSpeed"/>
                        <TextBox Classes="default" Grid.Column="1" Grid.Row="0" Text="{Binding #inputView.Zoom.ZoomSpeed}"/>
                        <TextBlock Classes="default" Grid.Column="0" Grid.Row="1" Text="ZoomX"/>
                        <TextBox Classes="default" Grid.Column="1" Grid.Row="1" Text="{Binding #inputView.Zoom.ZoomX}"/>
                        <TextBlock Classes="default" Grid.Column="0" Grid.Row="2" Text="ZoomY"/>
                        <TextBox Classes="default" Grid.Column="1" Grid.Row="2" Text="{Binding #inputView.Zoom.ZoomY}"/>
                        <TextBlock Classes="default" Grid.Column="0" Grid.Row="3" Text="OffsetX"/>
                        <TextBox Classes="default" Grid.Column="1" Grid.Row="3" Text="{Binding #inputView.Zoom.OffsetX}"/>
                        <TextBlock Classes="default" Grid.Column="0" Grid.Row="4" Text="OffsetY"/>
                        <TextBox Classes="default" Grid.Column="1" Grid.Row="4" Text="{Binding #inputView.Zoom.OffsetY}"/>
                        <TextBlock Classes="default" Grid.Column="0" Grid.Row="5" Text="CustomDraw"/>
                        <CheckBox Classes="default" Grid.Column="1" Grid.Row="5" IsChecked="{Binding #inputView.CustomDraw, Mode=TwoWay}"/>
                    </Grid>
                </TabItem>
                <TabItem Classes="default" Header="Json">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto">
                        <TextBlock Classes="default" Text="Path:" Grid.Row="0"/>
                        <TextBox x:Name="path" Classes="default" Text="container.json" Grid.Row="1"/>
                        <Button Classes="default" Content="Open Container" Command="{Binding OpenContainer}" CommandParameter="{Binding #path.Text}" Grid.Row="2"/>
                        <Button Classes="default" Content="Save Container" Command="{Binding SaveContainer}" CommandParameter="{Binding #path.Text}" Grid.Row="3"/>
                    </Grid>
                </TabItem>
            </TabControl>
            <GridSplitter Grid.Row="1"/>
            <TabControl Classes="default" Grid.Row="2" TabStripPlacement="Top">
                <TabItem Classes="default" Header="Container">
                    <Border Classes="default">
                        <ContentControl Content="{Binding CurrentContainer}"/>
                    </Border>
                </TabItem>
                <TabItem Classes="default" Header="Working">
                    <Border Classes="default">
                        <ContentControl Content="{Binding WorkingContainer}"/>
                    </Border>
                </TabItem>
                <TabItem Classes="default" Header="Tools">
                    <Border Classes="default">
                        <ListBox Classes="default" Items="{Binding Tools}" SelectedItem="{Binding CurrentTool}">
                            <ListBox.DataTemplates>
                                <DataTemplate>
                                    <TextBlock Classes="default" Text="{Binding Title}"/>
                                </DataTemplate>
                            </ListBox.DataTemplates>
                        </ListBox>
                    </Border>
                </TabItem>
                <TabItem Classes="default" Header="Intersections">
                    <Border Classes="default">
                        <Grid RowDefinitions="Auto,*">
                            <DropDown Classes="default" Grid.Row="0" x:Name="Intersections" Items="{Binding CurrentTool.Intersections}" SelectedIndex="0">
                                <DropDown.DataTemplates>
                                    <DataTemplate>
                                        <TextBlock Classes="default" Text="{Binding Title}"/>
                                    </DataTemplate>
                                </DropDown.DataTemplates>
                            </DropDown>
                            <ContentControl Grid.Row="1" Content="{Binding ElementName=Intersections, Path=SelectedItem.Settings}"/>
                        </Grid>
                    </Border>
                </TabItem>
                <TabItem Classes="default" Header="Filters">
                    <Border Classes="default">
                        <Grid RowDefinitions="Auto,*">
                            <DropDown Classes="default" Grid.Row="0" x:Name="Filters" Items="{Binding CurrentTool.Filters}" SelectedIndex="0">
                                <DropDown.DataTemplates>
                                    <DataTemplate>
                                        <TextBlock Classes="default" Text="{Binding Title}"/>
                                    </DataTemplate>
                                </DropDown.DataTemplates>
                            </DropDown>
                            <ContentControl Grid.Row="1" Content="{Binding ElementName=Filters, Path=SelectedItem.Settings}"/>
                        </Grid>
                    </Border>
                </TabItem>
            </TabControl>
        </Grid>
        <GridSplitter Grid.Row="2" Grid.Column="1"/>
        <Border Classes="zoom" Grid.Row="2" Grid.Column="2">
            <Border Classes="clip" ClipToBounds="True" Background="Transparent">
                <editor:AvaloniaInputView x:Name="inputView" Background="Transparent" CustomDraw="True" ClipToBounds="False"/>
            </Border>
        </Border>
    </Grid>
</UserControl>
